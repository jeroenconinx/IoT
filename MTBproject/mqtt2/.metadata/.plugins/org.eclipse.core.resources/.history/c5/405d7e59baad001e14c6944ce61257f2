#include "servo_task.h"
#include "task_communication.h"
#include "cyhal.h"

#define SERVO_MAXIMUM_ROTATION_DEGREES 90
#define SERVO_TIME_RANGE 1000

#define MIDLE_PULSE_WIDTH 1500
#define MAX_PULSE_WIDTH_CLAMP 1850
#define MIN_PULSE_WIDTH_CLAMP 1000
#define PULSE_PERIOD 20000

void servoRotate(cyhal_pwm_t *pwm_obj, int degree)
{
	float pulseWidthPerDegree = ((float)SERVO_TIME_RANGE/(float)SERVO_MAXIMUM_ROTATION_DEGREES);
	int pulseWidth = MIDLE_PULSE_WIDTH - (int)(degree * pulseWidthPerDegree);
	if (pulseWidth > MAX_PULSE_WIDTH_CLAMP)
	{
		pulseWidth = MAX_PULSE_WIDTH_CLAMP;
	}
	if (pulseWidth < MIN_PULSE_WIDTH_CLAMP)
	{
		pulseWidth = MIN_PULSE_WIDTH_CLAMP;
	}
	cyhal_pwm_set_period(pwm_obj, 20000, pulseWidth);
	cyhal_pwm_start(pwm_obj);
}

void servo_task(void *pvParameters)
{
	cyhal_pwm_t my_pwm_obj;
	cyhal_pwm_init(&my_pwm_obj, P13_7, NULL);

	while (true)
	{

	}
}
